{
	// defines colors accessible via skin.getColor. These can also be referenced in actual style definitions below
	colors:
	{
		white: '#ffffff',
		green: '#00ff00',
		orange: '#ff9900',
		blue: '#0000ff',
		black: [0, 0, 0, 255],
		gray: [50, 50, 50, 255],
		blue: [116, 139, 167, 255],
		dialogDim: [50, 50, 50, 50]
	},
	// array of any LibGdxAtlases. The path should be the same one you would use to load it via the content system.
	//libGdxAtlases: [ 'bin/skin/uiskinatlas' ],

	// array of any TextureAtlases. The path should be the same one you would use to load it via the content system.
	//textureAtlases: [ 'bin/skin/textureAtlas' ],

	// the rest of the file is specific style types. The key (ButtonStyle here) is the exact class name from the UI element.
	ButtonStyle:
	{
		// "default" is the name of the style that is used at runtime to find it. Any font, color or IDrawable can be specified.
		// Nez UI will search any loaded atlases for the specified resource.
		default: { down: 'default-round-down', up: 'default-round' },
		toggle: { down: 'default-round-down', checkked: 'default-round-down', up: 'default-round' },
		// this ButtonStyle uses only references to colors. Nez UI will handle making appropriate resources at runtime for you.
		colored: { down: 'gray', up: 'black', over: 'blue' }
	},
	TextButtonStyle:
	{
		// "default" is the name of the style that is used at runtime to find it. Any font, color or IDrawable can be specified.
		// Nez UI will search any loaded atlases for the specified resource.
		default: { down: 'default-round-down', up: 'default-round' },
		toggle: { down: 'default-round-down', checkked: 'default-round-down', up: 'default-round' },
		// this ButtonStyle uses only references to colors. Nez UI will handle making appropriate resources at runtime for you.
		colored: { down: 'gray', up: 'black', over: 'blue', font: 'bin/Windows/nez/NezDefaultBMFont' }
	},
	SplitPaneStyle:
	{
		'default-vertical': { handle: 'default-splitpane-vertical' },
		'default-horizontal': { handle: 'default-splitpane' }
	},
	WindowStyle:
	{
		// the titleFontColor directly references a color that we specified above in the colors section
		default: { titleFont: 'bin/Windows/nez/NezDefaultBMFont', background: 'default-window', titleFontColor: 'white' },
		dialog: { titleFont: 'bin/Windows/nez/NezDefaultBMFont', background: 'default-window', titleFontColor: 'white', stageBackground: 'dialogDim' }
	},
	ProgressBarStyle:
	{
		'default-horizontal': { background: 'default-slider', knob: 'default-slider-knob' },
		'default-vertical': { background: 'default-slider', knob: 'default-round-large' }
	},
	SliderStyle:
	{
		'default-horizontal': { background: 'default-slider', knob: 'default-slider-knob' },
		'default-vertical': { background: 'default-slider', knob: 'default-round-large' }
	},
	LabelStyle:
	{
		// fonts should be the same path you would use to load it via the content system
		default: { font: 'bin/Windows/nez/NezDefaultBMFont', fontColor: 'white' },
		tooltip: { font: 'bin/Windows/nez/NezDefaultBMFont', fontColor: 'blue' },
	},
	TextTooltipStyle:
	{
		// note that labelStyle referes the the 'tooltip' LabelStyle defined above
		default: { labelStyle: 'tooltip', background: 'gray' }
	}
}